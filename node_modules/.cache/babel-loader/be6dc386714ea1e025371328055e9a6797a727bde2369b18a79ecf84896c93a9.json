{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, _toDisplayString($data.event.time) + \" on \" + _toDisplayString($data.event.date) + \" @ \" + _toDisplayString($data.event.location), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.event.description), 1 /* TEXT */)]);\n}","map":{"version":3,"mappings":";;uBACIA,oBAGM,cAFFC,oBAAkE,4BAA5DC,WAAK,CAACC,IAAI,IAAG,MAAI,oBAAGD,WAAK,CAACE,IAAI,IAAG,KAAG,oBAAGF,WAAK,CAACG,QAAQ,kBAC3DJ,oBAA8B,4BAAxBC,WAAK,CAACI,WAAW","names":["_createElementBlock","_createElementVNode","$data","time","date","location","description"],"sourceRoot":"","sources":["/Users/mac/Desktop/Intro to Vue/vue3-cli/vue-cli-app/src/components/EventDetails.vue"],"sourcesContent":["<template>\n    <div>\n        <p>{{ event.time }} on {{ event.date }} @ {{ event.location }}</p>\n        <p>{{ event.description }}</p>\n    </div>\n</template>\n\n<script>\nimport EventService from '@/services/EventService.js'\n\nexport default {\n    data() {\n        return {\n            event: null,\n            id: 123\n        }\n    },\n    created() {\n    EventService.getEvent(this.id)\n      .then(response => {\n        this.event = response.data\n      })\n      .catch(error => {\n        console.log(error)\n      })\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}